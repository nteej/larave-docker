on:
  push:
    branches:
      - main

jobs:
  create-deployment-artifacts:
    name: Create Deployment Artifacts
    runs-on: ubuntu-latest
    outputs:
      DEPLOYMENT_MATRIX: ${{ steps.export-deployment-matrix.outputs.DEPLOYMENT_MATRIX }}
    steps:
      - uses: actions/checkout@v2

      - name: Compile CSS and Javascript
        run : |
          npm install 
          npm run build

      - name: Configure PHP 8.1
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml  

      - name: Install Composer Dependencies
        run: composer install --no-dev --no-interaction --prefer-dist

      - name: Create Deployment Artifacts
        env: 
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUV_SHA}".tar.gz --exclude=*.git --exclude=node_modules *
      
      - name: Store artifacts for distribution
        uses: actions/upload-artifact@v2
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

      - name: Export deployment matrix
        id: export-deployment-matrix
        run: |
          delimiter="$(openssl rand -hex 8)"
          JOSN="$(cat ./deployment-config.json)"
          echo "DEPLOYMENT_MATRIX<<${delimiter}" >> "${GITHUB_OUTPUT}"
          echo "$JSON" >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

  prepare-release-on-servers:
    name: "${{ matrix.server.name }}: Prepare release"
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts
    strategy: 
      matrix:
        server: ${{ fromJson(needs.create-deployment-artifacts.outputs.DEPLOYMENT_MATRIX) }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: app-build

        
