---
  on:
    push:
      branches:
        - main
  jobs:
    create-deployment-artifacts:
      name: Create Deployment Artifacts
      runs-on: ubuntu-latest
      outputs:
        deployment_matrix: ${{ steps.export-deployment-matrix.outputs.deployment_matrix }}
      steps:
        - uses: actions/checkout@v2
        - name: Compile CSS and Javascript
          run: |
            npm install 
            npm run build
        - name: Configure PHP 8.1
          uses: shivammathur/setup-php@master
          with:
            php-version: 8.1
            extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml
        - name: Install Composer Dependencies
          run: composer install --no-dev --no-interaction --prefer-dist
        - name: Create Deployment Artifacts
          env:
            GITHUB_SHA: ${{ github.sha }}
          run: tar -czf "${GITHUV_SHA}".tar.gz --exclude=*.git --exclude=node_modules *

        - name: Store artifacts for distribution
          uses: actions/upload-artifact@v2
          with:
            name: app-build
            path: ${{ github.sha }}.tar.gz

        - name: Export deployment matrix
          id: export-deployment-matrix
          run: |
            JOSN="$(cat ./deployment-config.json)"
            JSON="${JSON//'%'/'%25'}"
            JSON="${JSON//'\n'/'%OA'}"
            JSON="${JSON//'\r'/'%OD'}"
            echo "::set-output name=deployment-matrix::$(echo $JSON)"

    prepare-release-on-servers:
      name: "${{ matrix.server.name }}: Prepare release"
      runs-on: ubuntu-latest
      needs: create-deployment-artifacts
      strategy:
        matrix:
          server: ${{
            fromJSON(needs.create-deployment-artifacts.outputs.deployment_matrix) }}
      steps:
        - uses: actions/download-artifact@v2
          with:
            name: app-build
        - name: Upload
          uses: appleboy/scp-action@master
          with:
            host: ${{ matrix.server.ip }}
            username: ${{ matrix.server.username }}
            password: ${{ matrix.server.password }}
            port: ${{ matrix.server.port }}
            source: ${{ github.sha }}.tar.gz
            target: ${{ matrix.server.path }}/artifacts // /var/www/html/artifacts
  